{"version":3,"file":"static/js/315.ac62916a.chunk.js","mappings":"8KAcA,EAdwB,SAACA,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MACjB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCuBxB,EA3BmB,WACf,OACI,iCACI,SAACQ,EAAA,EAAD,CACIC,YAAY,qBACZC,KAAK,eACLC,SAAS,iDACTC,QAAQ,6BAEZ,mBACA,SAACJ,EAAA,EAAD,CACIE,KAAK,UACLC,SAAS,eACTC,QAAQ,gDAEZ,mBACA,SAACJ,EAAA,EAAD,CACIK,uBAAqB,EACrBC,WAAY,kBAAM,SAACC,EAAA,EAAD,KAClBJ,SAAS,wDAGb,mBACA,SAACK,EAAA,EAAD,QCJCC,EAAAA,WAAoBC,SAASC,eAAe,SACpDC,QACD,SAAC,eAAD,WACI,SAAC,EAAD,OAORC,K,oBC/BA,IAAIC,EAAIC,EAAQ,KAEdC,EAAQC,WAAaH,EAAEG,WACvBD,EAAQE,YAAcJ,EAAEI","sources":["reportWebVitals.js","ChatModule.js","bootstrap.js","../node_modules/react-dom/client.js"],"sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import ChatWindow from './components/chat-window/ChatWindow';\nimport GenericMessage from './components/generic-message/GenericMessage';\nimport WriteAMessage from './components/svg/WriteAMessage';\n\nconst ChatModule = () => {\n    return (\n        <>\n            <GenericMessage\n                windowTitle=\"Chat with an agent\"\n                icon=\"WarningAlert\"\n                headText=\"There was a problem connecting to chat support\"\n                subText=\"Please try again later.\"\n            />\n            <br />\n            <GenericMessage\n                icon=\"Success\"\n                headText=\"Message sent\"\n                subText=\"We will get back to you as soon as we can.\"\n            />\n            <br />\n            <GenericMessage\n                shouldShowMinimizeBtn\n                renderIcon={() => <WriteAMessage />}\n                headText=\"Connecting you with a support agent. \n                Please wait.\"\n            />\n            <br />\n            <ChatWindow />\n        </>\n    );\n};\nexport default ChatModule;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport initMirageServer from '@Green-Dot-Corporation/eureka-lib-mock-utils/src/initMirageServer';\nimport reportWebVitals from './reportWebVitals';\nimport registerRoutes from './mock/registerRoutes';\nimport ChatModule from './ChatModule';\nimport './styles/index.scss';\n\nif (process.env.NODE_ENV === 'development') {\n    // Shutdown any existing instance of server to avoid multiple pretender\n    // instances error\n    if (window.server && typeof window.server.shutdown === 'function') {\n        window.server.shutdown();\n    }\n\n    // Create server and pass routes and other options\n    window.server = initMirageServer({\n        routes() {\n            registerRoutes(this);\n        },\n    });\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <ChatModule />\n    </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GenericMessage","windowTitle","icon","headText","subText","shouldShowMinimizeBtn","renderIcon","WriteAMessage","ChatWindow","ReactDOM","document","getElementById","render","reportWebVitals","m","require","exports","createRoot","hydrateRoot"],"sourceRoot":""}