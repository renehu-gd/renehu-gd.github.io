{"version":3,"file":"static/js/508.9d7f4f59.chunk.js","mappings":"mSAkBA,EAdiB,SAACA,GACd,MAAsBA,EAAdC,KAAAA,OAAR,MAAe,GAAf,EAEA,OACI,iCACI,SAACC,EAAA,EAAD,CAAUC,UAAWF,EAAKG,YAD9B,IAC6CH,EAAKI,gBCApDC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAsBoB,OAtBpBA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAkBFC,eAAiB,SAACN,GACd,OAAO,SAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKO,KAC9B,EAEDC,QAAU,cANT,OAMS,8BAhBV,WACI,MAAmCC,KAAKV,MAAhCW,EAAR,EAAQA,WAAR,IAAoBC,MAAAA,OAApB,MAA4B,GAA5B,EAEA,OACI,SAACC,EAAA,EAAD,CACIF,WAAYG,GAAAA,CAAGJ,KAAKD,QAASE,GAC7BI,KAAMH,EACNL,eAAgBG,KAAKH,qBAGhC,EAhBCD,CAAiBU,EAAAA,eAyBvB,I,SCzBMC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAkBsB,OAlBtBA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAkBFR,QAAU,gBAFT,OAES,8BAbV,WACI,IAAQE,EAAeD,KAAKV,MAApBW,WAER,OACI,gBAAKO,UAAWJ,GAAAA,CAAGJ,KAAKD,QAASE,GAAjC,UACI,SAACQ,EAAA,EAAD,CACIC,YAAY,eACZ,aAAW,uBAI1B,EAhBCH,CAAuBD,EAAAA,eAqB7B,I,SC5BA,EAAe,WACO,OAAD,sHACOK,EAAAA,EAAAA,IAAI,eADX,cACPT,EADO,yBAGNA,GAHM,8CCOAU,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAuBD,OAvBCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACjBC,MAAQ,GAAG,EAsBXC,eAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAgB,oGACQC,EAAqB,eAD7B,cACNb,EADM,yBAGLA,GAHK,6CALhB,OAKgB,8BApBhB,WACI,IAAQA,EAAUF,KAAKa,MAAfX,MAER,OACI,UAACc,EAAA,EAAD,CACIC,WAAY,EACZC,YAAY,eACZjB,WAAW,kBAHf,WAKI,SAAC,EAAD,KACA,SAAC,EAAD,CAAUC,MAAOA,SAG5B,kEAED,oGACwBF,KAAKc,gBAD7B,OACUZ,EADV,OAEIF,KAAKmB,SAAS,CAAEjB,MAAAA,IAFpB,kGAFC,MAED,EAlBiBU,CAAmBN,EAAAA,eCIxC,EAdwB,SAACc,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MACjB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCeXQ,EAAAA,WAAoBC,SAASC,eAAe,SACpDC,QACD,UAAC,eAAD,YACI,iDACA,SAACnB,EAAD,QAORoB,K,oBChCA,IAAIC,EAAIC,EAAQ,KAEdC,EAAQC,WAAaH,EAAEG,WACvBD,EAAQE,YAAcJ,EAAEI","sources":["components/todo/ToDoItem.js","components/todo/ToDoList.js","components/todo/ToDoListHeader.js","services/ToDoService.js","ToDoModule.js","reportWebVitals.js","bootstrap.js","../node_modules/react-dom/client.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from '@Green-Dot-Corporation/eureka-ui-form-elements';\n\nconst ToDoItem = (props) => {\n    const { todo = {} } = props;\n\n    return (\n        <>\n            <Checkbox isChecked={todo.completed} /> {todo.description}\n        </>\n    );\n};\n\nToDoItem.propTypes = {\n    todo: PropTypes.object,\n};\n\nexport default ToDoItem;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { List } from '@Green-Dot-Corporation/eureka-ui-lists';\nimport TodoItem from './ToDoItem';\n\n// Styles\nimport './styles/todo-list.scss';\n\nclass ToDoList extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        todos: PropTypes.array,\n    };\n\n    render() {\n        const { contextCls, todos = [] } = this.props;\n\n        return (\n            <List\n                contextCls={cx(this.baseCls, contextCls)}\n                data={todos}\n                renderListItem={this.renderListItem}\n            />\n        );\n    }\n\n    renderListItem = (todo) => {\n        return <TodoItem key={todo.id} todo={todo} />;\n    };\n\n    baseCls = 'todo-list';\n}\n\nexport default ToDoList;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { TextInput } from '@Green-Dot-Corporation/eureka-ui-form-elements';\n// import { Button, VARIANTS } from '@Green-Dot-Corporation/eureka-ui-buttons';\n\n// Styles\nimport './styles/todo-list-header.scss';\n\nclass ToDoListHeader extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <div className={cx(this.baseCls, contextCls)}>\n                <TextInput\n                    placeholder=\"Add new TODO\"\n                    aria-label=\"Add new TODO\"\n                />\n            </div>\n        );\n    }\n\n    baseCls = 'todo-header';\n}\n\nexport default ToDoListHeader;\n","import { get } from '@Green-Dot-Corporation/eureka-lib-fetch-utils';\n\nexport default {\n    async getTodos() {\n        const todos = await get('/demo/todos');\n\n        return todos;\n    },\n};\n","import { PureComponent } from 'react';\nimport { Tile } from '@Green-Dot-Corporation/eureka-ui-layouts';\n\nimport ToDoList from './components/todo/ToDoList';\nimport ToDoListHeader from './components/todo/ToDoListHeader';\nimport ToDoService from './services/ToDoService';\n\n// Styles\nimport './styles/ui-module.scss';\n\nexport default class ToDoModule extends PureComponent {\n    state = {};\n\n    render() {\n        const { todos } = this.state;\n\n        return (\n            <Tile\n                headingLvl={1}\n                headingText=\"Things To DO\"\n                contextCls=\"module-temlpate\"\n            >\n                <ToDoListHeader />\n                <ToDoList todos={todos} />\n            </Tile>\n        );\n    }\n\n    async componentDidMount() {\n        const todos = await this.fetchTODOList();\n        this.setState({ todos });\n    }\n\n    fetchTODOList = async () => {\n        const todos = await ToDoService.getTodos('/demo/todos');\n\n        return todos;\n    };\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport initMirageServer from '@Green-Dot-Corporation/eureka-lib-mock-utils/src/initMirageServer';\nimport ReactDOM from 'react-dom/client';\nimport ToDoModule from './ToDoModule';\nimport reportWebVitals from './reportWebVitals';\nimport registerRoutes from './mock/registerRoutes';\nimport './styles/index.scss';\n\nif (process.env.NODE_ENV === 'development') {\n    // Shutdown any existing instance of server to avoid multiple pretender\n    // instances error\n    if (window.server && typeof window.server.shutdown === 'function') {\n        window.server.shutdown();\n    }\n\n    // Create server and pass routes and other options\n    window.server = initMirageServer({\n        routes() {\n            registerRoutes(this);\n        },\n    });\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <h1>Test DD Switch Page</h1>\n        <ToDoModule />\n    </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["props","todo","Checkbox","isChecked","completed","description","ToDoList","renderListItem","id","baseCls","this","contextCls","todos","List","cx","data","PureComponent","ToDoListHeader","className","TextInput","placeholder","get","ToDoModule","state","fetchTODOList","ToDoService","Tile","headingLvl","headingText","setState","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","render","reportWebVitals","m","require","exports","createRoot","hydrateRoot"],"sourceRoot":""}