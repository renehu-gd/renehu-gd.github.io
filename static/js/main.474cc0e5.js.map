{"version":3,"file":"static/js/main.474cc0e5.js","mappings":"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","sources":["../node_modules/@babel/runtime/regenerator/index.js","index.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@remix-run/router/router.ts","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","../node_modules/react-router/lib/use-sync-external-store-shim/index.ts","../node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimServer.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router/index.ts","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/sharing","../webpack/runtime/publicPath","../webpack/runtime/consumes","../webpack/runtime/css loading","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","import('./bootstrap');\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\nexport type MutationFormMethod = \"post\" | \"put\" | \"patch\" | \"delete\";\nexport type FormMethod = \"get\" | MutationFormMethod;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<Omit<R, ImmutableRouteKey>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  detectErrorBoundary: DetectErrorBoundaryFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        hasErrorBoundary: detectErrorBoundary(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        id,\n        hasErrorBoundary: detectErrorBoundary(route),\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          detectErrorBoundary,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        const starParam = params[star];\n\n        // Apply the splat\n        return starParam;\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n\n        if (optional === \"?\") {\n          return param == null ? \"\" : param;\n        }\n\n        if (param == null) {\n          invariant(false, `Missing \":${key}\" param`);\n        }\n\n        return param;\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  MutationFormMethod,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n} from \"./utils\";\nimport {\n  DeferredData,\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  basename?: string;\n  routes: AgnosticRouteObject[];\n  history: History;\n  hydrationData?: HydrationState;\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n};\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  formMethod?: FormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n\nconst defaultDetectErrorBoundary = (route: AgnosticRouteObject) =>\n  Boolean(route.hasErrorBoundary);\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let detectErrorBoundary =\n    init.detectErrorBoundary || defaultDetectErrorBoundary;\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    detectErrorBoundary,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(\n    dataRoutes,\n    init.history.location,\n    init.basename\n  );\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations from their actions\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (state.initialized) {\n      return router;\n    }\n\n    let lazyMatches = state.matches.filter((m) => m.route.lazy);\n\n    if (lazyMatches.length === 0) {\n      // Kick off initial data load if needed.  Use Pop to avoid modifying history\n      startNavigation(HistoryAction.Pop, state.location);\n      return router;\n    }\n\n    // Load lazy modules, then kick off initial data load if needed\n    let lazyPromises = lazyMatches.map((m) =>\n      loadLazyRouteModule(m.route, detectErrorBoundary, manifest)\n    );\n    Promise.all(lazyPromises).then(() => {\n      let initialized =\n        !state.matches.some((m) => m.route.loader) ||\n        init.hydrationData != null;\n      if (initialized) {\n        // We already have required loaderData so we can just set initialized\n        updateState({ initialized: true });\n      } else {\n        // We still need to kick off initial data loads\n        startNavigation(HistoryAction.Pop, state.location);\n      }\n    });\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(to, opts);\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, init.basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a mutation submission\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n    if (\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        detectErrorBoundary,\n        router.basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission\n      ? submission\n      : loadingNavigation.formMethod &&\n        loadingNavigation.formAction &&\n        loadingNavigation.formData &&\n        loadingNavigation.formEncType\n      ? {\n          formMethod: loadingNavigation.formMethod,\n          formAction: loadingNavigation.formAction,\n          formData: loadingNavigation.formData,\n          formEncType: loadingNavigation.formEncType,\n        }\n      : undefined;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      init.basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach((rf) =>\n      fetchControllers.set(rf.key, pendingNavigationController!)\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n\n    return {\n      loaderData,\n      errors,\n      ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n        ? { fetchers: new Map(state.fetchers) }\n        : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = matchRoutes(routesToUse, href, init.basename);\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: href })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      detectErrorBoundary,\n      router.basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, init.basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      init.basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        fetchControllers.set(staleKey, abortController);\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      detectErrorBoundary,\n      router.basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (\n      ABSOLUTE_URL_REGEX.test(redirect.location) &&\n      isBrowser &&\n      typeof window?.location !== \"undefined\"\n    ) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename =\n        stripBasename(url.pathname, init.basename || \"/\") == null;\n\n      if (window.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          detectErrorBoundary,\n          router.basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, request.signal),\n            f.match,\n            f.matches,\n            manifest,\n            detectErrorBoundary,\n            router.basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        request.signal,\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        request.signal,\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): void {\n    let doneKeys = [];\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    inFlightDataRoutes = newRoutes;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let detectErrorBoundary =\n    opts?.detectErrorBoundary || defaultDetectErrorBoundary;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    detectErrorBoundary,\n    undefined,\n    manifest\n  );\n  let basename = (opts ? opts.basename : null) || \"/\";\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"head\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"head\" && method !== \"options\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        detectErrorBoundary,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          detectErrorBoundary,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  to: To,\n  opts?: RouterNavigateOptions,\n  isFetcher = false\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  let path = typeof to === \"string\" ? to : createPath(to);\n\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    submission = {\n      formMethod: opts.formMethod || \"get\",\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // Since fetcher GET submissions only run a single loader (as opposed to\n  // navigation GET submissions which run all loaders), we need to preserve\n  // any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  let defaultShouldRevalidate =\n    // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n    isRevalidationRequired ||\n    // Clicked the same link, resubmitted a GET form\n    currentUrl.toString() === nextUrl.toString() ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search;\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        defaultShouldRevalidate ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({ key, ...f, matches: null, match: null });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        ...f,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate,\n    });\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        ...f,\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  detectErrorBoundary: DetectErrorBoundaryFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to detectErrorBoundary\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `detectErrorBoundary` function to set the `hasErrorBoundary` route\n    // property since the logic will differ between frameworks.\n    hasErrorBoundary: detectErrorBoundary({ ...routeToUpdate }),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  detectErrorBoundary: DetectErrorBoundaryFunction,\n  basename = \"/\",\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, detectErrorBoundary, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, detectErrorBoundary, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname: new URL(request.url).pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else {\n      invariant<Function>(\n        handler,\n        `Could not find the ${type} to run on the \"${match.route.id}\" route`\n      );\n\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n        let routePathnames = getPathContributingMatches(activeMatches).map(\n          (match) => match.pathnameBase\n        );\n        let resolvedLocation = resolveTo(\n          location,\n          routePathnames,\n          new URL(request.url).pathname\n        );\n        invariant(\n          createPath(resolvedLocation),\n          `Unable to resolve redirect location: ${location}`\n        );\n\n        // Prepend the basename to the redirect location if we have one\n        if (basename) {\n          let path = resolvedLocation.pathname;\n          resolvedLocation.pathname =\n            path === \"/\" ? basename : joinPaths([basename, path]);\n        }\n\n        location = createPath(resolvedLocation);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (result instanceof DeferredData) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  return (\n    a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod {\n  return validRequestMethods.has(method as FormMethod);\n}\n\nfunction isMutationMethod(method?: string): method is MutationFormMethod {\n  return validMutationMethods.has(method as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signal: AbortSignal,\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n","import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method: method.toLowerCase(), encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_detectErrorBoundary as detectErrorBoundary,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    detectErrorBoundary,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    detectErrorBoundary,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + to)\n          : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as FormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own&nbsp;\n          <code style={codeStyles}>ErrorBoundary</code> prop on&nbsp;\n          <code style={codeStyles}>&lt;Route&gt;</code>\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      if (match.route.ErrorBoundary) {\n        errorElement = <match.route.ErrorBoundary />;\n      } else if (match.route.errorElement) {\n        errorElement = match.route.errorElement;\n      } else {\n        errorElement = <DefaultErrorComponent />;\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode = outlet;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{ outlet, matches }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  let getState = React.useCallback(() => router.state, [router]);\n\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    getState,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    getState\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? <Routes /> : fallbackElement}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  RelativeRoutingType,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction detectErrorBoundary(route: RouteObject) {\n  if (__DEV__) {\n    if (route.Component && route.element) {\n      warning(\n        false,\n        \"You should not include both `Component` and `element` on your route - \" +\n          \"`element` will be ignored.\"\n      );\n    }\n    if (route.ErrorBoundary && route.errorElement) {\n      warning(\n        false,\n        \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n          \"`errorElement` will be ignored.\"\n      );\n    }\n  }\n\n  // Note: this check also occurs in createRoutesFromChildren so update\n  // there if you change this\n  return Boolean(route.ErrorBoundary) || Boolean(route.errorElement);\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    detectErrorBoundary,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  detectErrorBoundary as UNSAFE_detectErrorBoundary,\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"36\":\"535b941c\",\"164\":\"5f4ff3c4\",\"228\":\"9f252970\",\"733\":\"ceb22af2\",\"787\":\"f38e7388\",\"791\":\"fb4f0ad6\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/css/\" + chunkId + \".\" + \"113277fb\" + \".chunk.css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"tfin-ui-project-template:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.S = {};\nvar initPromises = {};\nvar initTokens = {};\n__webpack_require__.I = function(name, initScope) {\n\tif(!initScope) initScope = [];\n\t// handling circular init calls\n\tvar initToken = initTokens[name];\n\tif(!initToken) initToken = initTokens[name] = {};\n\tif(initScope.indexOf(initToken) >= 0) return;\n\tinitScope.push(initToken);\n\t// only runs once\n\tif(initPromises[name]) return initPromises[name];\n\t// creates a new share scope if needed\n\tif(!__webpack_require__.o(__webpack_require__.S, name)) __webpack_require__.S[name] = {};\n\t// runs all init snippets from all modules reachable\n\tvar scope = __webpack_require__.S[name];\n\tvar warn = function(msg) { return typeof console !== \"undefined\" && console.warn && console.warn(msg); };\n\tvar uniqueName = \"tfin-ui-project-template\";\n\tvar register = function(name, version, factory, eager) {\n\t\tvar versions = scope[name] = scope[name] || {};\n\t\tvar activeVersion = versions[version];\n\t\tif(!activeVersion || (!activeVersion.loaded && (!eager != !activeVersion.eager ? eager : uniqueName > activeVersion.from))) versions[version] = { get: factory, from: uniqueName, eager: !!eager };\n\t};\n\tvar initExternal = function(id) {\n\t\tvar handleError = function(err) { warn(\"Initialization of sharing external failed: \" + err); };\n\t\ttry {\n\t\t\tvar module = __webpack_require__(id);\n\t\t\tif(!module) return;\n\t\t\tvar initFn = function(module) { return module && module.init && module.init(__webpack_require__.S[name], initScope); }\n\t\t\tif(module.then) return promises.push(module.then(initFn, handleError));\n\t\t\tvar initResult = initFn(module);\n\t\t\tif(initResult && initResult.then) return promises.push(initResult['catch'](handleError));\n\t\t} catch(err) { handleError(err); }\n\t}\n\tvar promises = [];\n\tswitch(name) {\n\t\tcase \"default\": {\n\t\t\tregister(\"react-dom\", \"18.0.0\", function() { return __webpack_require__.e(164).then(function() { return function() { return __webpack_require__(4164); }; }); });\n\t\t\tregister(\"react-router-dom\", \"6.9.0\", function() { return function() { return __webpack_require__(1087); }; }, 1);\n\t\t\tregister(\"react-router\", \"6.9.0\", function() { return function() { return __webpack_require__(7689); }; }, 1);\n\t\t\tregister(\"react\", \"18.0.0\", function() { return __webpack_require__.e(791).then(function() { return function() { return __webpack_require__(2791); }; }); });\n\t\t}\n\t\tbreak;\n\t}\n\tif(!promises.length) return initPromises[name] = 1;\n\treturn initPromises[name] = Promise.all(promises).then(function() { return initPromises[name] = 1; });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","var parseVersion = function(str) {\n\t// see webpack/lib/util/semver.js for original code\n\tvar p=function(p){return p.split(\".\").map((function(p){return+p==p?+p:p}))},n=/^([^-+]+)?(?:-([^+]+))?(?:\\+(.+))?$/.exec(str),r=n[1]?p(n[1]):[];return n[2]&&(r.length++,r.push.apply(r,p(n[2]))),n[3]&&(r.push([]),r.push.apply(r,p(n[3]))),r;\n}\nvar versionLt = function(a, b) {\n\t// see webpack/lib/util/semver.js for original code\n\ta=parseVersion(a),b=parseVersion(b);for(var r=0;;){if(r>=a.length)return r<b.length&&\"u\"!=(typeof b[r])[0];var e=a[r],n=(typeof e)[0];if(r>=b.length)return\"u\"==n;var t=b[r],f=(typeof t)[0];if(n!=f)return\"o\"==n&&\"n\"==f||(\"s\"==f||\"u\"==n);if(\"o\"!=n&&\"u\"!=n&&e!=t)return e<t;r++}\n}\nvar rangeToString = function(range) {\n\t// see webpack/lib/util/semver.js for original code\n\tvar r=range[0],n=\"\";if(1===range.length)return\"*\";if(r+.5){n+=0==r?\">=\":-1==r?\"<\":1==r?\"^\":2==r?\"~\":r>0?\"=\":\"!=\";for(var e=1,a=1;a<range.length;a++){e--,n+=\"u\"==(typeof(t=range[a]))[0]?\"-\":(e>0?\".\":\"\")+(e=2,t)}return n}var g=[];for(a=1;a<range.length;a++){var t=range[a];g.push(0===t?\"not(\"+o()+\")\":1===t?\"(\"+o()+\" || \"+o()+\")\":2===t?g.pop()+\" \"+g.pop():rangeToString(t))}return o();function o(){return g.pop().replace(/^\\((.+)\\)$/,\"$1\")}\n}\nvar satisfy = function(range, version) {\n\t// see webpack/lib/util/semver.js for original code\n\tif(0 in range){version=parseVersion(version);var e=range[0],r=e<0;r&&(e=-e-1);for(var n=0,i=1,a=!0;;i++,n++){var f,s,g=i<range.length?(typeof range[i])[0]:\"\";if(n>=version.length||\"o\"==(s=(typeof(f=version[n]))[0]))return!a||(\"u\"==g?i>e&&!r:\"\"==g!=r);if(\"u\"==s){if(!a||\"u\"!=g)return!1}else if(a)if(g==s)if(i<=e){if(f!=range[i])return!1}else{if(r?f>range[i]:f<range[i])return!1;f!=range[i]&&(a=!1)}else if(\"s\"!=g&&\"n\"!=g){if(r||i<=e)return!1;a=!1,i--}else{if(i<=e||s<g!=r)return!1;a=!1}else\"s\"!=g&&\"n\"!=g&&(a=!1,i--)}}var t=[],o=t.pop.bind(t);for(n=1;n<range.length;n++){var u=range[n];t.push(1==u?o()|o():2==u?o()&o():u?satisfy(u,version):!o())}return!!o();\n}\nvar ensureExistence = function(scopeName, key) {\n\tvar scope = __webpack_require__.S[scopeName];\n\tif(!scope || !__webpack_require__.o(scope, key)) throw new Error(\"Shared module \" + key + \" doesn't exist in shared scope \" + scopeName);\n\treturn scope;\n};\nvar findVersion = function(scope, key) {\n\tvar versions = scope[key];\n\tvar key = Object.keys(versions).reduce(function(a, b) {\n\t\treturn !a || versionLt(a, b) ? b : a;\n\t}, 0);\n\treturn key && versions[key]\n};\nvar findSingletonVersionKey = function(scope, key) {\n\tvar versions = scope[key];\n\treturn Object.keys(versions).reduce(function(a, b) {\n\t\treturn !a || (!versions[a].loaded && versionLt(a, b)) ? b : a;\n\t}, 0);\n};\nvar getInvalidSingletonVersionMessage = function(scope, key, version, requiredVersion) {\n\treturn \"Unsatisfied version \" + version + \" from \" + (version && scope[key][version].from) + \" of shared singleton module \" + key + \" (required \" + rangeToString(requiredVersion) + \")\"\n};\nvar getSingleton = function(scope, scopeName, key, requiredVersion) {\n\tvar version = findSingletonVersionKey(scope, key);\n\treturn get(scope[key][version]);\n};\nvar getSingletonVersion = function(scope, scopeName, key, requiredVersion) {\n\tvar version = findSingletonVersionKey(scope, key);\n\tif (!satisfy(requiredVersion, version)) typeof console !== \"undefined\" && console.warn && console.warn(getInvalidSingletonVersionMessage(scope, key, version, requiredVersion));\n\treturn get(scope[key][version]);\n};\nvar getStrictSingletonVersion = function(scope, scopeName, key, requiredVersion) {\n\tvar version = findSingletonVersionKey(scope, key);\n\tif (!satisfy(requiredVersion, version)) throw new Error(getInvalidSingletonVersionMessage(scope, key, version, requiredVersion));\n\treturn get(scope[key][version]);\n};\nvar findValidVersion = function(scope, key, requiredVersion) {\n\tvar versions = scope[key];\n\tvar key = Object.keys(versions).reduce(function(a, b) {\n\t\tif (!satisfy(requiredVersion, b)) return a;\n\t\treturn !a || versionLt(a, b) ? b : a;\n\t}, 0);\n\treturn key && versions[key]\n};\nvar getInvalidVersionMessage = function(scope, scopeName, key, requiredVersion) {\n\tvar versions = scope[key];\n\treturn \"No satisfying version (\" + rangeToString(requiredVersion) + \") of shared module \" + key + \" found in shared scope \" + scopeName + \".\\n\" +\n\t\t\"Available versions: \" + Object.keys(versions).map(function(key) {\n\t\treturn key + \" from \" + versions[key].from;\n\t}).join(\", \");\n};\nvar getValidVersion = function(scope, scopeName, key, requiredVersion) {\n\tvar entry = findValidVersion(scope, key, requiredVersion);\n\tif(entry) return get(entry);\n\tthrow new Error(getInvalidVersionMessage(scope, scopeName, key, requiredVersion));\n};\nvar warnInvalidVersion = function(scope, scopeName, key, requiredVersion) {\n\ttypeof console !== \"undefined\" && console.warn && console.warn(getInvalidVersionMessage(scope, scopeName, key, requiredVersion));\n};\nvar get = function(entry) {\n\tentry.loaded = 1;\n\treturn entry.get()\n};\nvar init = function(fn) { return function(scopeName, a, b, c) {\n\tvar promise = __webpack_require__.I(scopeName);\n\tif (promise && promise.then) return promise.then(fn.bind(fn, scopeName, __webpack_require__.S[scopeName], a, b, c));\n\treturn fn(scopeName, __webpack_require__.S[scopeName], a, b, c);\n}; };\n\nvar load = /*#__PURE__*/ init(function(scopeName, scope, key) {\n\tensureExistence(scopeName, key);\n\treturn get(findVersion(scope, key));\n});\nvar loadFallback = /*#__PURE__*/ init(function(scopeName, scope, key, fallback) {\n\treturn scope && __webpack_require__.o(scope, key) ? get(findVersion(scope, key)) : fallback();\n});\nvar loadVersionCheck = /*#__PURE__*/ init(function(scopeName, scope, key, version) {\n\tensureExistence(scopeName, key);\n\treturn get(findValidVersion(scope, key, version) || warnInvalidVersion(scope, scopeName, key, version) || findVersion(scope, key));\n});\nvar loadSingleton = /*#__PURE__*/ init(function(scopeName, scope, key) {\n\tensureExistence(scopeName, key);\n\treturn getSingleton(scope, scopeName, key);\n});\nvar loadSingletonVersionCheck = /*#__PURE__*/ init(function(scopeName, scope, key, version) {\n\tensureExistence(scopeName, key);\n\treturn getSingletonVersion(scope, scopeName, key, version);\n});\nvar loadStrictVersionCheck = /*#__PURE__*/ init(function(scopeName, scope, key, version) {\n\tensureExistence(scopeName, key);\n\treturn getValidVersion(scope, scopeName, key, version);\n});\nvar loadStrictSingletonVersionCheck = /*#__PURE__*/ init(function(scopeName, scope, key, version) {\n\tensureExistence(scopeName, key);\n\treturn getStrictSingletonVersion(scope, scopeName, key, version);\n});\nvar loadVersionCheckFallback = /*#__PURE__*/ init(function(scopeName, scope, key, version, fallback) {\n\tif(!scope || !__webpack_require__.o(scope, key)) return fallback();\n\treturn get(findValidVersion(scope, key, version) || warnInvalidVersion(scope, scopeName, key, version) || findVersion(scope, key));\n});\nvar loadSingletonFallback = /*#__PURE__*/ init(function(scopeName, scope, key, fallback) {\n\tif(!scope || !__webpack_require__.o(scope, key)) return fallback();\n\treturn getSingleton(scope, scopeName, key);\n});\nvar loadSingletonVersionCheckFallback = /*#__PURE__*/ init(function(scopeName, scope, key, version, fallback) {\n\tif(!scope || !__webpack_require__.o(scope, key)) return fallback();\n\treturn getSingletonVersion(scope, scopeName, key, version);\n});\nvar loadStrictVersionCheckFallback = /*#__PURE__*/ init(function(scopeName, scope, key, version, fallback) {\n\tvar entry = scope && __webpack_require__.o(scope, key) && findValidVersion(scope, key, version);\n\treturn entry ? get(entry) : fallback();\n});\nvar loadStrictSingletonVersionCheckFallback = /*#__PURE__*/ init(function(scopeName, scope, key, version, fallback) {\n\tif(!scope || !__webpack_require__.o(scope, key)) return fallback();\n\treturn getStrictSingletonVersion(scope, scopeName, key, version);\n});\nvar installedModules = {};\nvar moduleToHandlerMapping = {\n\t9733: function() { return loadSingletonVersionCheckFallback(\"default\", \"react-router-dom\", [4,6,9,0], function() { return function() { return __webpack_require__(1087); }; }); },\n\t6223: function() { return loadSingletonVersionCheckFallback(\"default\", \"react-dom\", [4,18,0,0], function() { return __webpack_require__.e(164).then(function() { return function() { return __webpack_require__(4164); }; }); }); },\n\t2672: function() { return loadSingletonVersionCheckFallback(\"default\", \"react\", [4,18,0,0], function() { return __webpack_require__.e(791).then(function() { return function() { return __webpack_require__(2791); }; }); }); },\n\t7801: function() { return loadSingletonVersionCheckFallback(\"default\", \"react-router\", [4,6,9,0], function() { return function() { return __webpack_require__(7689); }; }); }\n};\nvar initialConsumes = [2672,7801];\ninitialConsumes.forEach(function(id) {\n\t__webpack_require__.m[id] = function(module) {\n\t\t// Handle case when module is used sync\n\t\tinstalledModules[id] = 0;\n\t\tdelete __webpack_require__.c[id];\n\t\tvar factory = moduleToHandlerMapping[id]();\n\t\tif(typeof factory !== \"function\") throw new Error(\"Shared module is not available for eager consumption: \" + id);\n\t\tmodule.exports = factory();\n\t}\n});\nvar chunkMapping = {\n\t\"36\": [\n\t\t6223\n\t],\n\t\"733\": [\n\t\t9733\n\t]\n};\n__webpack_require__.f.consumes = function(chunkId, promises) {\n\tif(__webpack_require__.o(chunkMapping, chunkId)) {\n\t\tchunkMapping[chunkId].forEach(function(id) {\n\t\t\tif(__webpack_require__.o(installedModules, id)) return promises.push(installedModules[id]);\n\t\t\tvar onFactory = function(factory) {\n\t\t\t\tinstalledModules[id] = 0;\n\t\t\t\t__webpack_require__.m[id] = function(module) {\n\t\t\t\t\tdelete __webpack_require__.c[id];\n\t\t\t\t\tmodule.exports = factory();\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar onError = function(error) {\n\t\t\t\tdelete installedModules[id];\n\t\t\t\t__webpack_require__.m[id] = function(module) {\n\t\t\t\t\tdelete __webpack_require__.c[id];\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tvar promise = moduleToHandlerMapping[id]();\n\t\t\t\tif(promise.then) {\n\t\t\t\t\tpromises.push(installedModules[id] = promise.then(onFactory)['catch'](onError));\n\t\t\t\t} else onFactory(promise);\n\t\t\t} catch(e) { onError(e); }\n\t\t});\n\t}\n}","var createStylesheet = function(chunkId, fullhref, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tvar target = document.querySelector(\"body\");\n\ttarget.parentNode.insertBefore(linkTag, target.nextSibling);\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"36\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(733 != chunkId) {\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktfin_ui_project_template\"] = self[\"webpackChunktfin_ui_project_template\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(8305);\n"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","a","push","apply","instance","Function","bind","setPrototypeOf","prototype","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","toString","call","indexOf","TypeError","has","get","set","Wrapper","getPrototypeOf","this","constructor","create","Action","ResultType","PopStateEventType","createMemoryHistory","options","entries","initialEntries","initialIndex","v5Compat","map","entry","index","createMemoryLocation","state","clampIndex","length","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","createBrowserHistory","getUrlBasedHistory","window","globalHistory","usr","createHashHistory","substr","base","document","querySelector","href","getAttribute","url","hashIndex","slice","invariant","message","Error","cond","console","warn","e","getHistoryState","idx","current","random","_ref","parsedPath","searchIndex","getLocation","validateLocation","defaultView","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","assign","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","detectErrorBoundary","parentPath","manifest","route","treePath","id","join","children","isIndexRoute","indexRoute","hasErrorBoundary","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","b","score","siblings","every","i","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","caseSensitive","startsWith","joinPaths","concat","computeScore","forEach","includes","explodeOptionalSegments","exploded","segments","split","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","array","keyMatch","optional","param","pattern","paramNames","regexpSource","_","paramName","RegExp","compilePath","matcher","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","status","headers","Headers","Response","AbortedDeferredError","DeferredData","reject","pendingKeysSet","subscribers","deferredKeys","Array","isArray","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","done","add","promise","race","then","onSettle","catch","aborted","delete","emit","settledKey","subscriber","subscribe","cancel","abort","v","k","resolve","size","_tracked","isTrackedPromise","_error","_data","unwrapTrackedPromise","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","isBrowser","createElement","isServer","defaultDetectErrorBoundary","Boolean","createRouter","inFlightDataRoutes","dataRoutes","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","blockers","pendingAction","HistoryAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","completeNavigation","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","deleteBlocker","getSavedScrollPosition","navigate","opts","normalizeNavigateOptions","submission","currentLocation","userReplace","blockerKey","shouldBlockNavigation","updateBlocker","startNavigation","pendingError","startUninterruptedRevalidation","saveScrollPosition","routesToUse","loadingNavigation","overrideNavigation","notFoundMatches","cancelActiveDeferreds","isHashChangeOnly","request","createClientSideRequest","findNearestBoundary","handleAction","actionOutput","shortCircuited","pendingActionData","pendingActionError","_extends","Request","handleLoaders","interruptActiveLoads","actionMatch","getTargetMatch","type","method","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","isDeferredResult","activeSubmission","getMatchesToLoad","matchesToLoad","revalidatingFetchers","rf","fetcher","revalidatingFetcher","callLoadersAndMaybeResolveData","results","loaderResults","fetcherResults","findRedirect","processLoaderData","deferredData","markFetchRedirectsDone","didAbortFetchLoads","abortStaleFetchLoads","getFetcher","requestMatches","setFetcherError","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","isFetchActionRedirect","revalidationRequest","loadId","loadFetcher","staleKey","doneFetcher","resolveDeferredData","_temp","revalidate","redirectLocation","_isFetchActionRedirect","_window","isDifferentBasename","redirectHistoryAction","currentMatches","fetchersToLoad","all","f","resolveDeferredResults","abortFetcher","deleteFetcher","markFetchersDone","doneKeys","landedId","yeetedKeys","newBlocker","blocker","_ref2","blockerFunction","predicate","cancelledRouteIds","dfd","userMatches","createUseMatchesMatch","y","initialize","lazyMatches","lazyPromises","loadLazyRouteModule","enableScrollRestoration","positions","getPosition","getKey","fetch","handleFetcherAction","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","Symbol","isFetcher","isSubmissionNavigation","isValidMethod","stripHashFromPath","searchParams","convertFormDataToSearchParams","hasNakedIndexQuery","append","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","findIndex","values","currentUrl","nextUrl","defaultShouldRevalidate","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","isNewRouteInstance","fetcherMatches","fetcherMatch","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","lazyRoute","lazyRouteProperty","routeToUpdate","routeUpdates","staticRouteValue","isPropertyStaticallyDefined","isStaticRequest","isRouteRequest","requestContext","runHandler","handler","onReject","context","resultType","isResponse","protocol","isSameBasename","activeMatches","resolvedLocation","response","contentType","text","statusCode","deferred","_result$init","toUpperCase","body","URLSearchParams","File","name","processRouteLoaderData","foundError","loaderHeaders","newLoaderData","mergedLoaderData","hasOwnProperty","reverse","find","_temp4","errorMessage","isRevalidatingLoader","unwrap","resolveData","unwrappedData","getAll","handle","pathMatches","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","getFormSubmissionInfo","target","defaultAction","encType","submissionTrigger","FormData","isButtonElement","isInputElement","form","host","createBrowserRouter","parseHydrationData","createHashRouter","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","stack","BrowserRouter","historyRef","React","setState","Router","navigationType","navigator","HashRouter","HistoryRouter","_ref3","Link","ref","absoluteHref","onClick","relative","reloadDocument","NavigationContext","isExternal","targetUrl","useHref","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","ariaCurrentProp","className","classNameProp","styleProp","style","useResolvedPath","useLocation","routerState","DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","Form","props","FormImpl","DataRouterHook","DataRouterStateHook","forwardedRef","onSubmit","fetcherKey","submit","useSubmitImpl","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref7","useScrollRestoration","storageKey","useDataRouterContext","hookName","ctx","DataRouterContext","useDataRouterState","replaceProp","useNavigate","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","UseSubmitImpl","_temp2","routeContext","RouteContext","fetcherId","useFetcher","UseFetcher","String","createFetcherForm","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","UseScrollRestoration","useMatches","useNavigation","scrollRestoration","callback","capture","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","parse","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","_ref8","when","useBlocker","confirm","setTimeout","is","x","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","prevValue","nextValue","shim","getServerSnapshot","forceUpdate","useSyncExternalStore","AwaitContext","LocationContext","outlet","RouteErrorContext","useInRouterContext","joinedPathname","useNavigationType","useMatch","routePathnamesJson","activeRef","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","useRoutes","dataRouterStateContext","parentMatches","parentParams","parentPathnameBase","locationFromContext","parsedLocationArg","renderedMatches","_renderMatches","NavigationType","DefaultErrorComponent","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","RenderErrorBoundary","componentDidCatch","errorInfo","render","component","RenderedRoute","dataRouterContext","static","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","dataRouterState","errorIndex","reduceRight","getChildren","Component","element","useCurrentRouteId","useRouteContext","thisRoute","UseNavigation","useRevalidator","UseRevalidator","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","UseRouteError","_state$errors","useAsyncValue","useAsyncError","blockerId","shouldBlock","UseBlocker","AwaitRenderStatus","RouterProvider","fallbackElement","getState","useSyncExternalStoreShim","Routes","MemoryRouter","Navigate","Outlet","Route","_props","_ref4","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","_ref5","createRoutesFromChildren","Await","_ref6","AwaitErrorBoundary","ResolveAwait","neverSettledPromise","pending","renderError","success","toRender","renderMatches","createMemoryRouter","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","async","iter","skipTempReset","prev","stop","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","_arrayLikeToArray","len","arr2","_arrayWithHoles","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_classCallCheck","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_createForOfIteratorHelper","o","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","_typeof","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","_getPrototypeOf","_inherits","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","valueOf","_iterableToArray","_nonIterableRest","_setPrototypeOf","p","_slicedToArray","_i","_s","_arr","_n","_d","_toConsumableArray","arrayLikeToArray","_unsupportedIterableToArray","minLen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","c","getter","__esModule","d","definition","chunkId","promises","u","miniCssF","g","prop","inProgress","dataWebpackPrefix","l","script","needAttach","scripts","getElementsByTagName","charset","timeout","nc","setAttribute","src","onScriptComplete","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","head","appendChild","S","initPromises","initTokens","I","initScope","initToken","scope","uniqueName","register","version","factory","eager","versions","activeVersion","loaded","scriptUrl","importScripts","currentScript","parseVersion","str","exec","versionLt","t","rangeToString","range","satisfy","findSingletonVersionKey","getInvalidSingletonVersionMessage","requiredVersion","getSingletonVersion","scopeName","loadSingletonVersionCheckFallback","fallback","installedModules","moduleToHandlerMapping","chunkMapping","consumes","onFactory","onError","loadStylesheet","fullhref","existingLinkTags","dataHref","tag","rel","existingStyleTags","findStylesheet","linkTag","errorType","realHref","code","insertBefore","nextSibling","createStylesheet","installedCssChunks","miniCss","installedChunks","j","installedChunkData","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","chunkLoadingGlobal"],"sourceRoot":""}