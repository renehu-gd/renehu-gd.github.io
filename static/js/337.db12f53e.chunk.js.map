{"version":3,"file":"static/js/337.db12f53e.chunk.js","mappings":"sQAIMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA0BqC,OA1BrCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA0BFC,QAAU,+BAFT,OAES,8BArBV,WACI,IAAQC,EAAeC,KAAKC,MAApBF,WAER,OACI,iBAAMG,UAAWC,GAAAA,CAAGH,KAAKF,QAASC,GAAlC,UACI,gBACIK,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,iBACIC,EAAE,oHACFF,KAAK,yBAKxB,EAxBCV,CAAgCa,EAAAA,eA6BtC,IC7BMC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA0BoC,OA1BpCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA0BFb,QAAU,8BAFT,OAES,8BArBV,WACI,IAAQC,EAAeC,KAAKC,MAApBF,WAER,OACI,iBAAMG,UAAWC,GAAAA,CAAGH,KAAKF,QAASC,GAAlC,UACI,gBACIK,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,iBACIC,EAAE,6EACFF,KAAK,yBAKxB,EAxBCI,CAA+BD,EAAAA,eA6BrC,ICzBME,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAgD+B,OAhD/BA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAyBFC,WAAa,WACT,IACMC,EADmB,EAAKb,MAAtBc,aAEFlB,EACAc,EAEN,OAAO,SAACG,EAAD,CAAYf,WAAU,UAAK,EAAKD,QAAV,aAChC,EAGDkB,UAAY,WAAO,IAAD,EACND,EAAiB,EAAKd,MAAtBc,aAER,OAAO,EAAP,uBACQ,EAAKjB,QADb,aACkCiB,IADlC,mBAEQ,EAAKjB,QAFb,iBAEsCiB,IAFtC,mBAGQ,EAAKjB,QAHb,gBAGqCiB,IAHrC,mBAIQ,EAAKjB,QAJb,gBAIqCiB,GAJrC,GAMH,EAIDjB,QAAU,yBAzBT,OAyBS,8BArCV,WACI,MAAuCE,KAAKC,MAApCF,EAAR,EAAQA,WAAYkB,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,SACpBC,EAASnB,KAAKgB,YAEpB,OACI,gBAAKd,UAAWC,GAAAA,CAAGH,KAAKF,QAASqB,EAAQpB,GAAzC,UACI,iBAAKG,UAAS,UAAKF,KAAKF,QAAV,sBAAd,iBACKmB,QADL,IACKA,EAAAA,EAAQC,EACRlB,KAAKa,sBAIrB,EAvBCD,CAAuBF,EAAAA,eAAvBE,EAOKQ,aAAe,CAClBL,cAAc,GA2CtB,QCnDMM,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAwC0B,OAxC1BA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA8BFC,oBAAsB,WAElBC,QAAQC,IAAI,oBACf,EAEDC,uBAAyB,WAErBF,QAAQC,IAAI,kBACf,EAED1B,QAAU,oBAZT,OAYS,8BAnCV,WACI,IAAQC,EAAeC,KAAKC,MAApBF,WAER,OACI,SAAC2B,EAAA,EAAD,CACI3B,WAAYI,GAAAA,CAAGH,KAAKF,QAASC,GAE7B4B,MAAM,qBACNC,oBAAkB,EAClBC,uBAAqB,EACrBC,gBAAiB9B,KAAKsB,oBACtBS,mBAAoB/B,KAAKyB,uBAP7B,UASI,iBAAKvB,UAAS,UAAKF,KAAKF,QAAV,yBAAd,WAEI,SAAC,EAAD,CAAgBmB,KAAK,iGACrB,SAAC,EAAD,CACIA,KAAK,4EACLF,cAAc,aAKjC,EA5BCM,CAAmBX,EAAAA,eA2CzB,K,kJC/CMsB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA0FsC,OA1FtCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA0FFlC,QAAU,gCAFT,OAES,8BArFV,WACI,IAAQC,EAAeC,KAAKC,MAApBF,WAER,OACI,iBAAMG,UAAWC,GAAAA,CAAGH,KAAKF,QAASC,GAAlC,UACI,iBACIK,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,WAOI,eAAGyB,SAAS,0BAAZ,WACI,iBACIxB,EAAE,4RACFF,KAAK,WAET,iBACIE,EAAE,yPACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,kCACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,mCACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,wMACFF,KAAK,aAET,iBACIE,EAAE,oOACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,kNACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,wMACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,cAGvB,2BACI,qBAAUC,GAAG,oBAAb,UACI,iBACInC,MAAM,KACNC,OAAO,KACPE,KAAK,QACLiC,UAAU,oCAOrC,EAxFCR,CAAqBtB,EAAAA,eA6F3B,IC7FM+B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAoDiC,OApDjCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAoDF3C,QAAU,2BAFT,OAES,8BA/CV,WACI,IAAQC,EAAeC,KAAKC,MAApBF,WAER,OACI,iBAAMG,UAAWC,GAAAA,CAAGH,KAAKF,QAASC,GAAlC,UACI,iBACIK,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,WAOI,eAAGyB,SAAS,0BAAZ,WACI,iBACIxB,EAAE,6MACFF,KAAK,UACL2B,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,gdACFF,KAAK,QACL2B,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,cAGvB,2BACI,qBAAUC,GAAG,oBAAb,UACI,iBACInC,MAAM,KACNC,OAAO,KACPE,KAAK,QACLiC,UAAU,oCAOrC,EAlDCC,CAAgB/B,EAAAA,eAuDtB,IClDMgC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAiEmC,OAjEnCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA6CFC,UAAY,WACR,MAA6B,EAAK1C,MAA1B2C,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAEd,OAAIA,EACOA,IAGK,iBAATD,GAA0B,SAAC,EAAD,KAAmB,SAAC,EAAD,KACvD,EAEDtB,oBAAsB,WAElBC,QAAQC,IAAI,oBACf,EAEDC,uBAAyB,WAErBF,QAAQC,IAAI,kBACf,EAED1B,QAAU,6BAtBT,OAsBS,8BAtDV,WACI,MAMIE,KAAKC,MALLF,EADJ,EACIA,WACA+C,EAFJ,EAEIA,YACAjB,EAHJ,EAGIA,sBACAkB,EAJJ,EAIIA,SACAC,EALJ,EAKIA,QAGJ,OACI,SAACtB,EAAA,EAAD,CACI3B,WAAYI,GAAAA,CAAGH,KAAKF,QAASC,GAC7B4B,MAAOmB,EACPjB,sBAAuBA,EACvBE,mBAAoB/B,KAAKyB,uBACzBG,oBAAkB,EAClBE,gBAAiB9B,KAAKsB,oBAN1B,UAQI,iBAAKpB,UAAS,UAAKF,KAAKF,QAAV,qBAAd,UACKE,KAAK2C,aAEN,SAACM,EAAA,EAAD,CACIlD,WAAU,UAAKC,KAAKF,QAAV,cACVoD,WAAY,EAFhB,SAIKH,KAGL,cAAG7C,UAAS,UAAKF,KAAKF,QAAV,aAAZ,SAA2CkD,aAI1D,EA3CCN,CAAuBhC,EAAAA,eAoE7B,K,gGCzEMyC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA4GuC,OA5GvCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA4GFrD,QAAU,iCAFT,OAES,8BAvGV,WACI,IAAQC,EAAeC,KAAKC,MAApBF,WAER,OACI,iBAAMG,UAAWC,GAAAA,CAAGH,KAAKF,QAASC,GAAlC,UACI,iBACIK,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,WAOI,eAAGyB,SAAS,0BAAZ,WACI,iBACIxB,EAAE,+QACFF,KAAK,WAET,iBACIE,EAAE,4OACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,mCACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,2BACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,mKACFF,KAAK,UACL2B,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,gFACFF,KAAK,aAET,iBACIE,EAAE,oEACFF,KAAK,UACL2B,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,mGACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,mKACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEnB,iBACI7B,EAAE,mCACFyB,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,cAGvB,2BACI,qBAAUC,GAAG,oBAAb,UACI,iBACInC,MAAM,KACNC,OAAO,KACPE,KAAK,QACLiC,UAAU,gCAOrC,EA1GCW,CAAsBzC,EAAAA,eA+G5B,O,oKC1GMgB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA0FiC5B,OA1FjC4B,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KA8BF0B,cAAgB,WACZ,MAA6D,EAAKnD,MAA1D0B,EAAR,EAAQA,MAAOE,EAAf,EAAeA,sBAAuBD,EAAtC,EAAsCA,mBAEtC,OACI,iCACI,gBAAK1B,UAAS,UAAK,EAAKJ,QAAV,WAAd,SAA2C6B,IAC1CE,GAAyB,EAAKwB,oBAC9BzB,GAAsB,EAAK0B,qBAGvC,EAEDA,eAAiB,WACb,IAAQxB,EAAoB,EAAK7B,MAAzB6B,gBAER,OACI,gBACI5B,UAAWC,GAAAA,CACP,EAAKoD,yBADI,UAEN,EAAKA,yBAFC,0BADjB,UAMI,SAACC,EAAA,EAAD,CACIzD,WAAYI,GAAAA,CAAG,GAAD,OAAI,EAAKL,QAAT,gBACd+C,WAAY,EAAKY,mBACjBC,QAAS5B,EAET,aAAW,oBAI1B,EAEDuB,kBAAoB,WAChB,IAAQtB,EAAuB,EAAK9B,MAA5B8B,mBAER,OACI,gBACI7B,UAAWC,GAAAA,CACP,EAAKoD,yBADI,UAEN,EAAKA,yBAFC,6BADjB,UAMI,SAACC,EAAA,EAAD,CACIzD,WAAYI,GAAAA,CAAG,GAAD,OAAI,EAAKL,QAAT,mBACd+C,WAAY,EAAKc,sBACjBD,QAAS3B,EAET,aAAW,uBAI1B,EAED4B,sBAAwB,kBAAM,SAACC,EAAA,EAAD,KAAN,EAExBH,mBAAqB,kBAAM,SAACI,EAAA,EAAD,KAAN,EAErB/D,QAAU,4BAA4B,EAEtCyD,yBAAAA,GAAAA,OAA8B,EAAKzD,QAAAA,yBAAAA,EA9DlC,OA8DkCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MAzEnC,WACI,MAAiCE,KAAKC,MAA9BF,EAAR,EAAQA,WAAYmB,EAApB,EAAoBA,SAEpB,OACI,SAAC4C,EAAA,EAAD,CACIV,cAAepD,KAAKoD,cACpBrD,WAAYI,GAAAA,CAAGH,KAAKF,QAASC,GAFjC,SAIKmB,QAGZ,EA5BCQ,CAAwBhB,EAAAA,eAAxBgB,EAUKN,aAAe,CAClBS,uBAAuB,EACvBD,oBAAoB,EACpBE,gBAAiB,kBAAMiC,QAAQC,WAC/BjC,mBAAoB,kBAAMgC,QAAQC,YA+E1C","sources":["components/svg/ChatTextBubbleRightTail.js","components/svg/ChatTextBubbleLeftTail.js","components/chat-window/ChatTextBubble.js","components/chat-window/ChatWindow.js","components/svg/WarningAlert.js","components/svg/Success.js","components/generic-message/GenericMessage.js","components/svg/WriteAMessage.js","components/window-container/WindowContainer.js"],"sourcesContent":["import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass ChatTextBubbleRightTail extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"12\"\n                    height=\"15\"\n                    viewBox=\"0 0 12 15\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M-0.000148773 0H5.99985C5.99985 4.82743 5.65399 12.7323 11.1514 15C4.94531 15 0.969548 12.3333 -0.000148773 11V0Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-bubble-right-tail';\n}\n\nexport default ChatTextBubbleRightTail;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass ChatTextBubbleLeftTail extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"11\"\n                    height=\"15\"\n                    viewBox=\"0 0 11 15\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M11 0H5C5 4.86555 5.60812 12.6867 0 15C6.20606 15 10.0303 12.3333 11 11V0Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-bubble-left-tail';\n}\n\nexport default ChatTextBubbleLeftTail;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ChatTextBubbleRightTail from '../svg/ChatTextBubbleRightTail';\nimport ChatTextBubbleLeftTail from '../svg/ChatTextBubbleLeftTail';\n// Styles\nimport './styles/chat-text-bubble.scss';\n\nclass ChatTextBubble extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        text: PropTypes.string,\n        isTextFromMe: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        isTextFromMe: true,\n    };\n\n    render() {\n        const { contextCls, text, children } = this.props;\n        const modCls = this.getModCls();\n\n        return (\n            <div className={cx(this.baseCls, modCls, contextCls)}>\n                <div className={`${this.baseCls}__bubble-container`}>\n                    {text ?? children}\n                    {this.renderTail()}\n                </div>\n            </div>\n        );\n    }\n\n    renderTail = () => {\n        const { isTextFromMe } = this.props;\n        const BubbleTail = isTextFromMe\n            ? ChatTextBubbleRightTail\n            : ChatTextBubbleLeftTail;\n\n        return <BubbleTail contextCls={`${this.baseCls}__tail`} />;\n    };\n\n    // Get Modifier Classes\n    getModCls = () => {\n        const { isTextFromMe } = this.props;\n\n        return {\n            [`${this.baseCls}--from-me`]: isTextFromMe,\n            [`${this.baseCls}--from-other`]: !isTextFromMe,\n            [`${this.baseCls}--tail-right`]: isTextFromMe,\n            [`${this.baseCls}--tail-left`]: !isTextFromMe,\n        };\n    };\n\n    // Base class which all component class names should be\n    // derived from\n    baseCls = 'web-chat-text-bubble';\n}\n\nexport default ChatTextBubble;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport WindowContainer from '../window-container/WindowContainer';\nimport ChatTextBubble from './ChatTextBubble';\n// Styles\nimport './styles/chat-window.scss';\n\nclass ChatWindow extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <WindowContainer\n                contextCls={cx(this.baseCls, contextCls)}\n                // TODO: replace the hard code title when localization available\n                title=\"Chat with an agent\"\n                shouldShowCloseBtn\n                shouldShowMinimizeBtn\n                onCloseBtnClick={this.handleCloseBtnClick}\n                onMinimizeBtnClick={this.handleMinimizeBtnClick}\n            >\n                <div className={`${this.baseCls}__chat-text-container`}>\n                    {/* TODO: Replace the below to really chat text when API is ready */}\n                    <ChatTextBubble text=\"I’m having an issue with my direct deposit not showing up in my account. Can you help?\" />\n                    <ChatTextBubble\n                        text=\"Let me look that up for you. Hold one moment while I access your account.\"\n                        isTextFromMe={false}\n                    />\n                </div>\n            </WindowContainer>\n        );\n    }\n\n    handleCloseBtnClick = () => {\n        // TODO: will replace by real close conversation session when Gateway API is ready\n        console.log('close btn click');\n    };\n\n    handleMinimizeBtnClick = () => {\n        // TODO: will replace by minimize the window\n        console.log('min btn click');\n    };\n\n    baseCls = 'web-chat-window';\n}\n\nexport default ChatWindow;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nclass WarningAlert extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"69\"\n                    height=\"65\"\n                    viewBox=\"0 0 69 65\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <g clipPath=\"url(#clip0_2431_240914)\">\n                        <path\n                            d=\"M67.5073 4.70357V44.3449C67.5073 46.2171 65.9607 47.7637 64.0886 47.7637H43.6574L34.4593 63.7179L25.3426 47.7637H4.91144C3.03926 47.7637 1.49268 46.2171 1.49268 44.3449V4.70357C1.49268 2.83139 3.03926 1.28481 4.91144 1.28481H64.0886C65.9607 1.20341 67.5073 2.74999 67.5073 4.70357Z\"\n                            fill=\"white\"\n                        />\n                        <path\n                            d=\"M25.3426 47.7655H4.91144C3.03926 47.7655 1.49268 46.2189 1.49268 44.3467V4.70538C1.49268 2.8332 3.03926 1.28662 4.91144 1.28662H64.0886C65.9607 1.28662 67.5073 2.8332 67.5073 4.70538V44.3467C67.5073 46.2189 65.9607 47.7655 64.0886 47.7655H43.6574\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M43.6577 47.7637L34.541 63.7179\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M34.5404 63.7184L25.3423 47.7642\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M36.0055 7.79658L53.7505 39.5422C54.4017 40.6818 53.5877 42.0656 52.2853 42.0656H16.7139C15.4115 42.0656 14.5975 40.6818 15.2487 39.5422L32.9937 7.79658C33.6449 6.657 35.3543 6.657 36.0055 7.79658Z\"\n                            fill=\"#FFAD9F\"\n                        />\n                        <path\n                            d=\"M34.4589 17.2393C35.1101 17.2393 35.6799 17.8091 35.6799 18.4602V30.4259C35.6799 31.0771 35.1101 31.6469 34.4589 31.6469C33.8077 31.6469 33.2379 31.0771 33.2379 30.4259V18.4602C33.2379 17.8091 33.8077 17.2393 34.4589 17.2393Z\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M34.4589 34.6582C35.1101 34.6582 35.6799 35.228 35.6799 35.8792C35.6799 36.5304 35.1101 37.1002 34.4589 37.1002C33.8077 37.1002 33.2379 36.5304 33.2379 35.8792C33.2379 35.228 33.8077 34.6582 34.4589 34.6582Z\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M36.0055 7.79658L53.7505 39.5422C54.4017 40.6818 53.5877 42.0656 52.2853 42.0656H16.7139C15.4115 42.0656 14.5975 40.6818 15.2487 39.5422L32.9937 7.79658C33.6449 6.657 35.3543 6.657 36.0055 7.79658Z\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                    </g>\n                    <defs>\n                        <clipPath id=\"clip0_2431_240914\">\n                            <rect\n                                width=\"68\"\n                                height=\"64\"\n                                fill=\"white\"\n                                transform=\"translate(0.5 0.5)\"\n                            />\n                        </clipPath>\n                    </defs>\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat__svg--warningAlert';\n}\n\nexport default WarningAlert;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nclass Success extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"65\"\n                    height=\"65\"\n                    viewBox=\"0 0 65 65\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <g clipPath=\"url(#clip0_2570_232727)\">\n                        <path\n                            d=\"M32.4999 63.618C49.6859 63.618 63.618 49.6859 63.618 32.4999C63.618 15.3139 49.6859 1.38184 32.4999 1.38184C15.3139 1.38184 1.38184 15.3139 1.38184 32.4999C1.38184 49.6859 15.3139 63.618 32.4999 63.618Z\"\n                            fill=\"#86C5F9\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M45.6393 22.6402C44.8248 21.9209 43.5448 21.9209 42.7303 22.8799L28.1854 40.1428L22.1347 34.2687C21.3202 33.4295 20.0402 33.5494 19.2257 34.3885C18.4112 35.2277 18.5276 36.5464 19.3421 37.3856L26.6727 44.4586C26.7891 44.5785 26.7891 44.6983 26.9054 44.6983C27.2545 45.058 27.72 45.1779 28.1854 45.1779C28.7672 45.1779 29.2326 44.9381 29.6981 44.5785C29.8144 44.4586 29.8144 44.3387 29.9308 44.2188L45.872 25.6372C46.5702 24.6781 46.4538 23.3594 45.6393 22.6402Z\"\n                            fill=\"white\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                    </g>\n                    <defs>\n                        <clipPath id=\"clip0_2570_232727\">\n                            <rect\n                                width=\"64\"\n                                height=\"64\"\n                                fill=\"white\"\n                                transform=\"translate(0.5 0.5)\"\n                            />\n                        </clipPath>\n                    </defs>\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat__svg--success';\n}\n\nexport default Success;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Heading } from '@Green-Dot-Corporation/eureka-ui-typography';\nimport WindowContainer from '../window-container/WindowContainer';\nimport WarningAlert from '../svg/WarningAlert';\nimport Success from '../svg/Success';\nimport './styles/generic-message.scss';\n\nclass GenericMessage extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        windowTitle: PropTypes.string,\n        shouldShowMinimizeBtn: PropTypes.bool,\n        icon: PropTypes.string,\n        renderIcon: PropTypes.func,\n        headText: PropTypes.string,\n        subText: PropTypes.string,\n    };\n\n    render() {\n        const {\n            contextCls,\n            windowTitle,\n            shouldShowMinimizeBtn,\n            headText,\n            subText,\n        } = this.props;\n\n        return (\n            <WindowContainer\n                contextCls={cx(this.baseCls, contextCls)}\n                title={windowTitle}\n                shouldShowMinimizeBtn={shouldShowMinimizeBtn}\n                onMinimizeBtnClick={this.handleMinimizeBtnClick}\n                shouldShowCloseBtn\n                onCloseBtnClick={this.handleCloseBtnClick}\n            >\n                <div className={`${this.baseCls}__message-content`}>\n                    {this.renderSvg()}\n\n                    <Heading\n                        contextCls={`${this.baseCls}__headText`}\n                        headingLvl={2}\n                    >\n                        {headText}\n                    </Heading>\n\n                    <p className={`${this.baseCls}__subText`}>{subText}</p>\n                </div>\n            </WindowContainer>\n        );\n    }\n\n    renderSvg = () => {\n        const { icon, renderIcon } = this.props;\n\n        if (renderIcon) {\n            return renderIcon();\n        }\n\n        return icon === 'WarningAlert' ? <WarningAlert /> : <Success />;\n    };\n\n    handleCloseBtnClick = () => {\n        // TODO: will replace by real close conversation session when Gateway API is ready\n        console.log('close btn click');\n    };\n\n    handleMinimizeBtnClick = () => {\n        // TODO: will replace by minimize the window\n        console.log('min btn click');\n    };\n\n    baseCls = 'web-chat-generic-message';\n}\n\nexport default GenericMessage;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nclass WriteAMessage extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"65\"\n                    height=\"64\"\n                    viewBox=\"0 0 65 64\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <g clipPath=\"url(#clip0_2619_245666)\">\n                        <path\n                            d=\"M48.1507 18.3929V49.4647C48.1507 50.8326 47.0759 51.9074 45.708 51.9074H31.2469L18.2515 63.1441V51.9074H3.7904C2.42247 51.9074 1.34766 50.8326 1.34766 49.4647V18.3929C1.34766 17.025 2.42247 15.9502 3.7904 15.9502H45.8057C47.0759 15.9502 48.1507 17.025 48.1507 18.3929Z\"\n                            fill=\"white\"\n                        />\n                        <path\n                            d=\"M18.2515 51.9074H3.69275C2.32481 51.9074 1.25 50.8326 1.25 49.4647V18.3929C1.25 17.025 2.32481 15.9502 3.69275 15.9502H45.708C47.076 15.9502 48.1508 17.025 48.1508 18.3929V49.4647C48.1508 50.8326 47.076 51.9074 45.708 51.9074H31.2469\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M31.2469 51.9072L18.2515 63.2416\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M18.2515 63.2416V51.9072\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M54.8081 4.45504L57.4234 1.83972C58.8764 0.386761 61.2011 0.386761 62.6541 1.83972C64.107 3.29267 64.107 5.6174 62.6541 7.07036L60.0387 9.68567L54.8081 4.45504Z\"\n                            fill=\"#FFAD9F\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M54.7996 4.43768L28.2246 31.0127L33.43 36.2181L60.005 9.6431L54.7996 4.43768Z\"\n                            fill=\"#86C5F9\"\n                        />\n                        <path\n                            d=\"M24.7803 39.7136L33.4011 36.2265L28.2674 31.0928L24.7803 39.7136Z\"\n                            fill=\"#FFAD9F\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M33.4011 36.2273L24.7803 39.7144L28.2674 31.0936L54.808 4.45605L60.0387 9.68669L33.4011 36.2273Z\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M54.8081 4.45504L57.4234 1.83972C58.8764 0.386761 61.2011 0.386761 62.6541 1.83972C64.107 3.29267 64.107 5.6174 62.6541 7.07036L60.0387 9.68567L54.8081 4.45504Z\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                        <path\n                            d=\"M28.2676 31.0928L33.4014 36.2265\"\n                            stroke=\"black\"\n                            strokeWidth=\"1.5\"\n                            strokeMiterlimit=\"10\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                        />\n                    </g>\n                    <defs>\n                        <clipPath id=\"clip0_2619_245666\">\n                            <rect\n                                width=\"64\"\n                                height=\"64\"\n                                fill=\"white\"\n                                transform=\"translate(0.5)\"\n                            />\n                        </clipPath>\n                    </defs>\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat__svg--writeAMessage';\n}\n\nexport default WriteAMessage;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Tile } from '@Green-Dot-Corporation/eureka-ui-layouts';\nimport { EurekaMinus, EurekaX } from '@Green-Dot-Corporation/eureka-ui-icons';\nimport { Button } from '@Green-Dot-Corporation/eureka-ui-buttons';\n// Styles\nimport './styles/window-container.scss';\n\nclass WindowContainer extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        title: PropTypes.string,\n        shouldShowMinimizeBtn: PropTypes.bool,\n        shouldShowCloseBtn: PropTypes.bool,\n        onCloseBtnClick: PropTypes.func,\n        onMinimizeBtnClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        shouldShowMinimizeBtn: false,\n        shouldShowCloseBtn: false,\n        onCloseBtnClick: () => Promise.resolve(),\n        onMinimizeBtnClick: () => Promise.resolve(),\n    };\n\n    render() {\n        const { contextCls, children } = this.props;\n\n        return (\n            <Tile\n                renderHeading={this.renderHeading}\n                contextCls={cx(this.baseCls, contextCls)}\n            >\n                {children}\n            </Tile>\n        );\n    }\n\n    renderHeading = () => {\n        const { title, shouldShowMinimizeBtn, shouldShowCloseBtn } = this.props;\n\n        return (\n            <>\n                <div className={`${this.baseCls}__title`}>{title}</div>\n                {shouldShowMinimizeBtn && this.renderMinimizeBtn()}\n                {shouldShowCloseBtn && this.renderCloseBtn()}\n            </>\n        );\n    };\n\n    renderCloseBtn = () => {\n        const { onCloseBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--close-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__close-btn`)}\n                    renderIcon={this.renderCloseBtnIcon}\n                    onClick={onCloseBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Close Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtn = () => {\n        const { onMinimizeBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--minimize-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__minimize-btn`)}\n                    renderIcon={this.renderMinimizeBtnIcon}\n                    onClick={onMinimizeBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Minimize Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtnIcon = () => <EurekaMinus />;\n\n    renderCloseBtnIcon = () => <EurekaX />;\n\n    baseCls = 'web-chat-window-container';\n\n    baseTitleBtnContainerCls = `${this.baseCls}__title-btn-container`;\n}\n\nexport default WindowContainer;\n"],"names":["ChatTextBubbleRightTail","baseCls","contextCls","this","props","className","cx","width","height","viewBox","fill","xmlns","d","PureComponent","ChatTextBubbleLeftTail","ChatTextBubble","renderTail","BubbleTail","isTextFromMe","getModCls","text","children","modCls","defaultProps","ChatWindow","handleCloseBtnClick","console","log","handleMinimizeBtnClick","WindowContainer","title","shouldShowCloseBtn","shouldShowMinimizeBtn","onCloseBtnClick","onMinimizeBtnClick","WarningAlert","clipPath","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","strokeLinejoin","id","transform","Success","GenericMessage","renderSvg","icon","renderIcon","windowTitle","headText","subText","Heading","headingLvl","WriteAMessage","renderHeading","renderMinimizeBtn","renderCloseBtn","baseTitleBtnContainerCls","Button","renderCloseBtnIcon","onClick","renderMinimizeBtnIcon","EurekaMinus","EurekaX","Tile","Promise","resolve"],"sourceRoot":""}