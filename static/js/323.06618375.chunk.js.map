{"version":3,"file":"static/js/323.06618375.chunk.js","mappings":"iLAcA,EAdwB,SAACA,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MACjB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iSCOlBQ,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAoK0B,OApK1BA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAWFC,MAAQ,CACJC,8BAA8B,EAC9BC,qBAAqB,EACrBC,sBAAsB,EACtBC,gBAAgB,GAJZ,EAiDRC,iBAAmB,WACf,MAAqC,EAAKC,MAAlCC,EAAR,EAAQA,WAAeC,GAAvB,YACQC,EAAgB,EAAKT,MAArBS,YAER,OACI,SAACC,EAAA,GAAD,gBACIH,WAAYI,GAAAA,CAAG,EAAKC,QAASL,GAC7BM,KAAMJ,EAAYI,KAClBC,2BACIL,EAAYK,4BAEZN,GACAC,KAGf,EAEDM,yBAA2B,WACvB,MAAqC,EAAKT,MAAlCC,EAAR,EAAQA,WAAeC,GAAvB,YACQC,EAAgB,EAAKT,MAArBS,YAER,OAEI,SAACO,EAAA,GAAD,gBACIT,WAAYI,GAAAA,CAAG,EAAKC,QAASL,GAC7BU,IAAKR,EAAYQ,KACbT,GACAC,KAGf,EAEDS,gBAAkB,WACd,MAAqC,EAAKZ,MAAlCC,EAAR,EAAQA,WAAeC,GAAvB,YAEA,OACI,SAACW,EAAA,GAAD,QACIZ,WAAYI,GAAAA,CAAG,EAAKC,QAASL,GAC7Ba,KAAK,eACLC,YAAY,qBACZC,SAAS,iDACTC,QAAQ,2BACJf,KAGf,EA2DDI,QAAU,oBAFT,OAES,8BAlJV,WAGI,OAFiCY,KAAKxB,MAA9ByB,sBAEuBD,KAAKE,kBACvC,+BAED,WACI,IAAQC,EAAgBH,KAAKlB,MAArBqB,YAEJA,IACAC,EAAAA,EAAAA,YAAgCD,GAGpCH,KAAKK,2BACLL,KAAKM,cACLN,KAAKO,qBACR,kCAED,WACIP,KAAKQ,iCACR,2BAED,WACI,IAAQzB,EAAeiB,KAAKlB,MAApBC,WACR,EAIIiB,KAAKxB,MAJT,EACIC,6BADJ,EAEIC,oBAFJ,EAGIC,qBAGJ,OACI,4CAMI,SAAC8B,EAAA,EAAD,CAAY1B,WAAYI,GAAAA,CAAGa,KAAKZ,QAASL,KAN7C,SASP,4DAiDD,mGACU2B,EAAW,GADrB,kBAIiCC,EAAAA,EAAAA,gBAJjC,OAIcC,EAJd,OAKgBC,EACJD,EADIC,cAAeC,EACnBF,EADmBE,UACnBF,EAD8BG,OAAWC,GALrD,OAMYJ,EANZ,GAOQF,EAASzB,YAAc+B,EAEnBH,EACAH,EAASjC,8BAA+B,EAExCiC,EAAS/B,sBAAuB,EAG/BmC,IACDJ,EAAShC,qBAAsB,GAhB3C,kDAmBQgC,EAAShC,qBAAsB,EAnBvC,yBAqBQsB,KAAKiB,SAASP,GArBtB,+HAjDC,IAiDD,iEAyBA,oGAEgBQ,EAAUlB,KAAKlB,MAAfoC,MAFhB,SAGcC,EAAAA,EAAAA,OAAiBD,GAH/B,OAIQlB,KAAKiB,SAAS,CACVhB,sBAAsB,IALlC,gDAQQmB,QAAQC,MAAM,KAAEC,SARxB,2GAzBA,IAyBA,sCAYA,WACI,IAAQC,EAAqBvB,KAAKlB,MAA1ByC,iBAEJA,IACAvB,KAAKiB,SAAS,CACVO,+BAAgCD,EAAiBE,MAAMC,WAE3DH,EAAiBE,MAAMC,SAAW,cAEzC,0CAED,WACI,IAAQH,EAAqBvB,KAAKlB,MAA1ByC,iBACAC,EAAmCxB,KAAKxB,MAAxCgD,+BAEJD,GAAoBC,IACpBD,EAAiBE,MAAMC,SAAWF,OAEzC,EAlKCjD,CAAmBoD,EAAAA,eAuKzB,IChKA,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,EAAAA,WAAoBH,GAI5BI,QACD,UAAC,eAAD,YACI,+KAKA,SAAC,EAAD,CACIT,iBAAkBK,EAClBzB,YAAY,qCACZe,MAAM,UACNe,kBAAkB,oBAClBC,kBAfc,WACtBd,QAAQe,IAAI,sCAsBhBC,K,qBC7CA,IAAIC,EAAIC,EAAQ,MAEdC,EAAQC,WAAaH,EAAEG,WACvBD,EAAQE,YAAcJ,EAAEI","sources":["reportWebVitals.js","ChatModule.js","bootstrap.js","../node_modules/react-dom/client.js"],"sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/no-unused-class-component-methods */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-state */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ChooseOptionWindow from './components/choose-option-window/ChooseOptionWindow';\nimport GenericMessage from './components/generic-message/GenericMessage';\nimport Hoop from './components/hoop/Hoop';\nimport ChatWindow from './components/chat-window/ChatWindow';\nimport ChatService from './service/ChatService';\nimport './styles/chat-module.scss';\nimport CssImport from './util/CssImport';\nimport GatewayHttpClient from './util/GatewayHttpClient';\n\nclass ChatModule extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        containerElement: PropTypes.object,\n        accountIdentifier: PropTypes.string,\n        accessToken: PropTypes.string,\n        email: PropTypes.string,\n        brand: PropTypes.string,\n        env: PropTypes.string,\n    };\n\n    state = {\n        shouldShowChooseOptionWindow: false,\n        shouldShowErrorPage: false,\n        shouldShowHoopWindow: false,\n        shouldShowChat: true,\n    };\n\n    render() {\n        const { isDesignTokenApplied } = this.state;\n\n        return isDesignTokenApplied && this.renderContent();\n    }\n\n    componentDidMount() {\n        const { accessToken } = this.props;\n\n        if (accessToken) {\n            GatewayHttpClient.accessToken = accessToken;\n        }\n\n        this.setContainerElementStyle();\n        this.fetchConfig();\n        this.applyDesignToken();\n    }\n\n    componentWillUnmount() {\n        this.restoreContainerElementStyle();\n    }\n\n    renderContent() {\n        const { contextCls } = this.props;\n        const {\n            shouldShowChooseOptionWindow,\n            shouldShowErrorPage,\n            shouldShowHoopWindow,\n        } = this.state;\n\n        return (\n            <>\n                {/* {shouldShowChooseOptionWindow &&\n                    this.renderChooseOptionWindow()}\n                {shouldShowHoopWindow && this.renderHoopWindow()}\n                {shouldShowErrorPage && this.renderErrorPage()} */}\n                return (\n                <ChatWindow contextCls={cx(this.baseCls, contextCls)} />)\n            </>\n        );\n    }\n\n    renderHoopWindow = () => {\n        const { contextCls, ...restProps } = this.props;\n        const { chatConfigs } = this.state;\n\n        return (\n            <Hoop\n                contextCls={cx(this.baseCls, contextCls)}\n                hoop={chatConfigs.hoop}\n                isLeaveAgentMessageEnabled={\n                    chatConfigs.isLeaveAgentMessageEnabled\n                }\n                {...restProps}\n                {...chatConfigs}\n            />\n        );\n    };\n\n    renderChooseOptionWindow = () => {\n        const { contextCls, ...restProps } = this.props;\n        const { chatConfigs } = this.state;\n\n        return (\n            // TODO: this component should be changed after https://pd.nextestate.com/browse/GWA-187\n            <ChooseOptionWindow\n                contextCls={cx(this.baseCls, contextCls)}\n                ewt={chatConfigs.ewt}\n                {...restProps}\n                {...chatConfigs}\n            />\n        );\n    };\n\n    renderErrorPage = () => {\n        const { contextCls, ...restProps } = this.props;\n\n        return (\n            <GenericMessage\n                contextCls={cx(this.baseCls, contextCls)}\n                icon=\"WarningAlert\"\n                windowTitle=\"Chat with an agent\"\n                headText=\"There was a problem connecting to chat support\"\n                subText=\"Please try again later.\"\n                {...restProps}\n            />\n        );\n    };\n\n    async fetchConfig() {\n        const newState = {};\n\n        try {\n            const chatConfig = await ChatService.getChatConfig();\n            const { isAgentOnline, isSuccess, errors, ...restConfig } =\n                chatConfig;\n            newState.chatConfigs = restConfig;\n\n            if (isAgentOnline) {\n                newState.shouldShowChooseOptionWindow = true;\n            } else {\n                newState.shouldShowHoopWindow = true;\n            }\n\n            if (!isSuccess) {\n                newState.shouldShowErrorPage = true;\n            }\n        } catch (e) {\n            newState.shouldShowErrorPage = true;\n        } finally {\n            this.setState(newState);\n        }\n    }\n\n    async applyDesignToken() {\n        try {\n            const { brand } = this.props;\n            await CssImport.import(brand);\n            this.setState({\n                isDesignTokenApplied: true,\n            });\n        } catch (e) {\n            console.debug(e.message);\n        }\n    }\n\n    setContainerElementStyle() {\n        const { containerElement } = this.props;\n\n        if (containerElement) {\n            this.setState({\n                originContainerElementPosition: containerElement.style.position,\n            });\n            containerElement.style.position = 'relative';\n        }\n    }\n\n    restoreContainerElementStyle() {\n        const { containerElement } = this.props;\n        const { originContainerElementPosition } = this.state;\n\n        if (containerElement && originContainerElementPosition) {\n            containerElement.style.position = originContainerElementPosition;\n        }\n    }\n\n    baseCls = 'web-chat-module';\n}\n\nexport default ChatModule;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport initMirageServer from '@Green-Dot-Corporation/eureka-lib-mock-utils/src/initMirageServer';\nimport reportWebVitals from './reportWebVitals';\nimport registerRoutes from './mock/registerRoutes';\nimport ChatModule from './ChatModule';\nimport './styles/index.scss';\n\nif (process.env.NODE_ENV === 'development') {\n    // Shutdown any existing instance of server to avoid multiple pretender\n    // instances error\n    if (window.server && typeof window.server.shutdown === 'function') {\n        window.server.shutdown();\n    }\n\n    // Create server and pass routes and other options\n    window.server = initMirageServer({\n        routes() {\n            registerRoutes(this);\n        },\n    });\n}\nconst rootElement = document.getElementById('root');\nconst root = ReactDOM.createRoot(rootElement);\nconst handleCloseWindow = () => {\n    console.log('Chat window has been closed');\n};\nroot.render(\n    <React.StrictMode>\n        <div>\n            Test Widget Page, when invoke the wiget, we should expose the\n            ChatModule only and set the containerElement to which element in the\n            existing page\n        </div>\n        <ChatModule\n            containerElement={rootElement}\n            accessToken=\"ajkdjkljaklsjdfkljaklsdjfljksdajlf\"\n            brand=\"go2bank\"\n            accountIdentifier=\"adjkajsdlfjlkajsd\"\n            onChatWidgetClose={handleCloseWindow}\n        />\n    </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ChatModule","state","shouldShowChooseOptionWindow","shouldShowErrorPage","shouldShowHoopWindow","shouldShowChat","renderHoopWindow","props","contextCls","restProps","chatConfigs","Hoop","cx","baseCls","hoop","isLeaveAgentMessageEnabled","renderChooseOptionWindow","ChooseOptionWindow","ewt","renderErrorPage","GenericMessage","icon","windowTitle","headText","subText","this","isDesignTokenApplied","renderContent","accessToken","GatewayHttpClient","setContainerElementStyle","fetchConfig","applyDesignToken","restoreContainerElementStyle","ChatWindow","newState","ChatService","chatConfig","isAgentOnline","isSuccess","errors","restConfig","setState","brand","CssImport","console","debug","message","containerElement","originContainerElementPosition","style","position","PureComponent","rootElement","document","getElementById","ReactDOM","render","accountIdentifier","onChatWidgetClose","log","reportWebVitals","m","require","exports","createRoot","hydrateRoot"],"sourceRoot":""}